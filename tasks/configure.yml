---
- template: src=yarn-site.xml dest="{{ hadoop_home }}/etc/hadoop/yarn-site.xml" owner=root group=root
  notify:
   - restart namenode service
   - restart datanode service

- template: src=hdfs-site.xml dest="{{ hadoop_home }}/etc/hadoop/hdfs-site.xml" owner=root group=root
  notify:
   - restart namenode service
   - restart datanode service

- template: src=core-site.xml dest="{{ hadoop_home }}/etc/hadoop/core-site.xml" owner=root group=root
  notify:
   - restart namenode service
   - restart datanode service
   
- template: src=slaves dest="{{ hadoop_home }}/etc/hadoop/slaves" owner=root group=root
  notify:
   - restart namenode service
   - restart datanode service

- command: "{{ hadoop_home }}/bin/hdfs namenode -format creates={{hdfs_namenode_path}}"
  become: yes
  become_user: "{{hadoop_user_name}}"
  when: '"master" in hadoop_type_of_node or "namenode" in hadoop_type_of_node'

- iptables: chain=INPUT jump=ACCEPT protocol=tcp destination_port={{item}}
  ignore_errors: yes
  with_items:
  - 8088
  - 50030
  - 8030
  - 8031
  - 8032

- name: Open all ports from ip {{ item.1 }} in the firewall
  iptables: chain=INPUT jump=ACCEPT protocol=tcp source {{ item.1 }}
  ignore_errors: yes
  with_together:
      - groups.all
      - ansible_all_ipv4_addresses

#Copy the systemd specific file if systemd is installed
- name: Copy Systemd File for datanode
  template: src=systemd/hdfs_datanode.j2 dest=/usr/lib/systemd/system/hdfs_datanode.service mode=0644 force=yes
  when: '"slave" in hadoop_type_of_node or "datanode" in hadoop_type_of_node'
  notify:
   - reload systemd configuration
   - restart datanode service

  #Copy the systemd specific file if systemd is installed
- name: Copy Systemd File for namenode
  template: src=systemd/hdfs_namenode.j2 dest=/usr/lib/systemd/system/hdfs_namenode.service mode=0644 force=yes
  when: '"master" in hadoop_type_of_node or "namenode" in hadoop_type_of_node'
  notify:
   - reload systemd configuration
   - restart namenode service
   - refreshDFSNodes
   - refreshYarnNodes

- name: Restart namenode
  when: restart and '"master" in hadoop_type_of_node or "namenode" in hadoop_type_of_node'
  command: /bin/true
  notify:
   - restart namenode service

- name: Restart datanode
  when: restart and '"slave" in hadoop_type_of_node or "datanode" in hadoop_type_of_node'
  command: /bin/true
  notify:
   - restart datanode service